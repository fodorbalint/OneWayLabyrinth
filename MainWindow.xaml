<Window x:Class="OneWayLabyrinth.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:skia="clr-namespace:SkiaSharp.Views.WPF;assembly=SkiaSharp.Views.WPF"
        mc:Ignorable="d" Title="One-way labyrinth" Height="851" Width="688" Left="835" Top="0" Focusable="True" PreviewKeyDown="MWindow_PreviewKeyDown" PreviewMouseDown="Window_PreviewMouseDown">
    <Window.Resources>
        <Style x:Key="GreenButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="LightGreen" />
            <!-- LightGreen: #90EE90, LightPink: #FFB6C1 -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Black" Padding="10,0,10,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#83D883" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RedButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="LightPink" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Black" Padding="10,0,10,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E5A5AF" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid x:Name="MainGrid">
        <Button x:Name="FocusButton" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,0" Width="0" Height="0"/>
        <Rectangle Fill="Gray" Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0,138,0,0" />
        <skia:SKElement x:Name="Canvas" IgnorePixelScaling="True" PaintSurface="SKElement_PaintSurface" Margin="0,140,0,0" MouseMove="Canvas_MouseMove" MouseEnter="Canvas_MouseEnter" MouseLeave="Canvas_MouseLeave" />
        <Label Content="Size: " HorizontalAlignment="Left" Margin="20,30,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="Size" IsTabStop="False" HorizontalAlignment="Left" Margin="60,34,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="38" MaxLines="1"/>
        <CheckBox x:Name="LoadCheck" Content="Load from file" HorizontalAlignment="Left" Margin="130,36,0,0" VerticalAlignment="Top" IsChecked="False" Focusable="False" Click="SaveSettings"/>
        <CheckBox x:Name="SaveCheck" Content="Save on completion" HorizontalAlignment="Left" Margin="238,36,0,0" VerticalAlignment="Top" IsChecked="False" Focusable="False" Click="SaveSettings"/>
        <CheckBox x:Name="ContinueCheck" Content="Continue on completion" HorizontalAlignment="Left" Margin="130,56,0,0" VerticalAlignment="Top" IsChecked="False" Focusable="False" Click="SaveSettings"/>
        <CheckBox x:Name="KeepLeftCheck" Content="Keep left" HorizontalAlignment="Left" Margin="293,56,0,0" VerticalAlignment="Top" IsChecked="False" Focusable="False" Click="SaveSettings"/>
        <Button x:Name="FastRunButton" Content="Fast run" HorizontalAlignment="Left" Margin="20,85,0,0" VerticalAlignment="Top" Width="63" Click="FastRun_Click" Height="21" Style="{StaticResource GreenButton}" Focusable="False"/>
        <Button x:Name="StartStopButton" Content="Start" HorizontalAlignment="Left" Margin="97,85,0,0" VerticalAlignment="Top" Width="52" Click="StartStop_Click" Height="21" Style="{StaticResource GreenButton}" Focusable="False"/>
        <Button x:Name="ReloadButton" Content="Reload" HorizontalAlignment="Left" Margin="163,85,0,0" VerticalAlignment="Top" Width="52" Click="Reload_Click" Height="21" Focusable="False"/>
        <Button Content="Save" HorizontalAlignment="Left" Margin="229,85,0,0" VerticalAlignment="Top" Width="52" Click="Save_Click" Height="21" Focusable="False"/>
        <Button Content="Previous" HorizontalAlignment="Left" Margin="295,85,0,0" VerticalAlignment="Top" Width="62" Click="Previous_Click" Height="21" Focusable="False"/>
        <Button Content="Next" HorizontalAlignment="Left" Margin="371,85,0,0" VerticalAlignment="Top" Width="50" Click="Next_Click" Height="21"  Focusable="False"/>
        <Label Content="Current: " HorizontalAlignment="Left" Margin="375,30,0,0" VerticalAlignment="Top"/>
        <Label x:Name="CurrentCoords" Content="1, 1" HorizontalAlignment="Left" Margin="426,30,0,0" VerticalAlignment="Top"/>
        <Label Content="Possible: " HorizontalAlignment="Left" Margin="465,30,0,0" VerticalAlignment="Top"/>
        <TextBlock x:Name="PossibleCoords" TextWrapping="NoWrap" HorizontalAlignment="Left" Margin="524,35,0,0" VerticalAlignment="Top">
        1, 2<LineBreak />
        2, 1
        </TextBlock>
        <Label Content="Exits: " HorizontalAlignment="Left" Margin="560,30,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="ExitCoords" IsTabStop="False" HorizontalAlignment="Left" Margin="600,35,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="63" Height="50"/>
        <Label x:Name="CoordinateLabel" Content="" HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Bottom" BorderThickness="1" BorderBrush="Black" Background="White" Visibility="Hidden" IsHitTestVisible="False" ClipToBounds="False" />
        <Label x:Name="MessageLine" Content="" HorizontalAlignment="Left" Margin="20,108,0,0" VerticalAlignment="Top" Visibility="Hidden"/>
        <Button x:Name="OKButton" Background="LightPink" Content="OK" HorizontalAlignment="Left" Margin="371,112,0,0" VerticalAlignment="Top" Width="50" Click="OK_Click" Height="21" Visibility="Hidden"/>
        <Button Content="Rule editor" HorizontalAlignment="Left" Margin="593,107,0,0" VerticalAlignment="Top" Width="70" Click="Rules_Click" Height="21"  Focusable="False"/>
        <Button Content="Settings" HorizontalAlignment="Left" Margin="510,107,0,0" VerticalAlignment="Top" Width="70" Click="OpenSettings_Click" Height="21"  Focusable="False" />
        <Grid x:Name="SettingsGrid" Margin="0,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#80FFFFFF" Visibility="Hidden" >
            <Border BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid x:Name="SettingsContentGrid" Background="#FFFFFF">
                    <CheckBox x:Name="DisplayFutureCheck" Content="Display future lines" Click="SaveSettings" IsChecked="False" Focusable="False" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <CheckBox x:Name="DisplayAreaCheck" Content="Display area" Click="SaveSettings" IsChecked="False" Focusable="False" Margin="10,31,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" />
                    <Button Content="Close" HorizontalAlignment="Left" Margin="100,60,10,10" VerticalAlignment="Top" Width="70" Click="CloseSettings_Click" Height="21" Focusable="False" />
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
